{
    "name": "goalgorilla/social_docker",
    "description": "Social docker template for composer based Open Social projects.",
    "type": "project",
    "license": "GPL-2.0-or-later",
    "minimum-stability": "dev",
    "prefer-stable": true,
    "config": {
        "optimize-autoloader": true,
        "update-with-dependencies": true,
        "sort-packages": true,
        "allow-plugins": {
            "composer/installers": true,
            "cweagans/composer-patches": true,
            "drupal/core-composer-scaffold": true,
            "oomphinc/composer-installers-extender": true,
            "dealerdirect/phpcodesniffer-composer-installer": true,
            "phpstan/extension-installer": true,
            "drupal/console-extend-plugin": true,
            "zaporylie/composer-drupal-optimizations": true
        }
    },
    "require": {
        "drupal/redis": "^1.5",
        "goalgorilla/open_social": "dev-main"
    },
    "require-dev": {
        "composer/composer": "^2",
        "goalgorilla/open_social_dev": "dev-main",
        "palantirnet/drupal-rector": "^0.15",
        "phpmd/phpmd": "^2.10",
        "squizlabs/html_codesniffer": "*",
        "symplify/easy-coding-standard": "^9.4"
    },
    "repositories": {
        "0": {
            "type": "composer",
            "url": "https://packages.drupal.org/8",
            "exclude": ["goalgorilla/open_social", "drupal/social"]
        },
        "1": {
            "type": "composer",
            "url": "https://asset-packagist.org"
        },
        "2": {
            "type": "package",
            "package": {
                "name": "squizlabs/html_codesniffer",
                "version": "2.8.1",
                "source": {
                    "url": "https://github.com/squizlabs/HTML_CodeSniffer.git",
                    "type": "git",
                    "reference": "master"
                }
            }
        },
        "3": {
            "type": "git",
            "url": "https://github.com/goalgorilla/open_social.git",
            "only": ["goalgorilla/open_social", "drupal/social"]
        }
    },
    "scripts": {
        "refresh": [
            "rm -rf composer.lock vendor html/core html/modules/contrib html/profiles/contrib html/themes/contrib",
            "@composer update -W --ansi"
        ],
        "docker-up": [
            "docker compose -f docker-compose.nginx.yml -p nginx up -d || true",
            "docker compose up -d --remove-orphans"
        ],
        "docker-stop": "docker-compose stop",
        "docker-shell": "test -f \".env\" || exit 1; export $(egrep -v '^#' .env | xargs); sh -c \"docker exec -ti ${PROJECT_NAME}_web bash\"",
        "install-open-social": "test -f \".env\" || exit 1; export $(egrep -v '^#' .env | xargs); sh -c \"docker exec -i ${PROJECT_NAME}_web /bin/bash /var/www/scripts/social/install/install_script.sh\"",
        "drush-cr": "test -f \".env\" || exit 1; export $(egrep -v '^#' .env | xargs); sh -c \"docker exec -i ${PROJECT_NAME}_web drush cr\"",
        "phpstan": "/var/www/vendor/bin/phpstan analyse -c /var/www/html/profiles/contrib/social/phpstan.neon --memory-limit=-1",
        "phpcs": [
            "cp /var/www/html/profiles/contrib/social/phpcs.xml /var/www/phpcs.xml",
            "/var/www/vendor/bin/phpcs --report-full",
            "rm /var/www/phpcs.xml"
        ],
        "phpunit": "/var/www/vendor/bin/phpunit -c /var/www/html/profiles/contrib/social/phpunit.xml.dist --log-junit ./test-reports/phpunit.xml"
    },
    "scripts-descriptions": {
        "refresh": "Delete local directories and execute composer update -W --ansi",
        "docker-up": "Start all the docker containers for this project",
        "docker-stop": "Stop the docker containers for this project. Does not stop the nginx containers",
        "docker-shell": "Open bash within the web comtainer",
        "install-open-social": "(Re)install Open Social using the install script",
        "drush-cr": "Rebuild cache from outside of docker container",
        "phpstan": "Analyse the code in this repository using the configuration from the distribution",
        "phpcs": "Lint the code in the repository using PHP CodeSniffer with the configuration from the distribution",
        "phpunit": "Run PHPUnit tests in this project with the configuration from the distribution"
    },
    "extra": {
        "installer-types": [
            "bower-asset",
            "npm-asset"
        ],
        "installer-paths": {
            "html/core": [
                "drupal/core"
            ],
            "html/modules/contrib/{$name}": [
                "type:drupal-module"
            ],
            "html/profiles/contrib/social": [
                "goalgorilla/open_social"
            ],
            "html/profiles/contrib/{$name}": [
                "type:drupal-profile"
            ],
            "html/themes/contrib/{$name}": [
                "type:drupal-theme"
            ],
            "html/libraries/{$name}": [
                "type:drupal-library",
                "type:bower-asset",
                "type:npm-asset"
            ],
            "scripts/{$name}": [
                "goalgorilla/open_social_scripts"
            ],
            "drush/contrib/{$name}": [
                "type:drupal-drush"
            ]
        },
        "enable-patching": true,
        "patchLevel": {
            "drupal/core": "-p2"
        },
        "drupal-scaffold": {
            "locations": {
                "web-root": "html/"
            }
        },
        "patches": {
            "drupal/like_dislike": {
                "Add support for webprofiler": "patches/like-dislike-fix-webprofiler.patch"
            },
            "squizlabs/html_codesniffer": {
                "Translatings does not work": "patches/DS-5443-accessibility.patch"
            }
        }
    }
}
